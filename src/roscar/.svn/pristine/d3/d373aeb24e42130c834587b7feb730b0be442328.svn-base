#!/usr/bin/env python

import rospy
import rosbag
import sys
import math

import phidget_spatial

import numpy as np
import matplotlib.pyplot as plt

if __name__ == '__main__':

    if len(sys.argv) != 2:
        print 'Usage: python plotVelData.py <bagfile>'
        exit()

    bag = rosbag.Bag(sys.argv[1], 'r')
    topics = ['/inertia']
    data = []
    size = 100
    kernel = np.ones(size)/size;

    #variables for conversion
    signConversion = -1
    meters = 3.66 #distance taped out and measured
    ticks = 126176 #empirically measured ten times and averaged
    secToMs = 1000
    mpsToMph = 2.23694
    ticksToMph = (signConversion * meters / ticks) * secToMs * mpsToMph 

    #other conversion variables
    circ = 0.05 * 2 * math.pi
    ratio = -11.0/29 * 3.36 #encoder to wheel
    matlabConv = (circ * ratio / 4096) * signConversion * secToMs * mpsToMph
    

    for topic, msg, t, in bag.read_messages(topics=topics):
        if topic == "/ticks":
            dx = msg.relative_change
            dt = msg.elapsed_time
            ticksPerMillisecond = dx / dt
            ourConv = ticksPerMillisecond * ticksToMph
            theirConv = ticksPerMillisecond * matlabConv
            time = t.toSecs()

            data.append([time, ourConv, theirConv])

    data = np.array(data)
    """
    xOutput = np.convolve(data[:,1],kernel,'same')
    xMean = np.mean(data[15000:,1])    
    xStd = np.std(data[15000:,1])
    yMean = np.mean(data[15000:,2])
    yStd = np.std(data[15000:,2])    
    zMean = np.mean(data[15000:,3])
    zStd = np.std(data[15000:,3])
    print "X Angular Mean",xMean,'\n'
    print "X Angular StdDev",xStd,'\n'
    print "Y Angular Mean",yMean,'\n'
    print "Y Angular StdDev",yStd,'\n'
    print "Z Angular Mean",zMean,'\n'
    print "Z Angular StdDev",zStd,'\n'
    """

    t = data[:,0]
    y1 = data[:,1]
    y2 = data[:,2]

    fig, ax = plt.subplots()
    ax.plot(t,y1,'b',t,y2,'g')

    #ax.axis('equal')
    plt.show()
